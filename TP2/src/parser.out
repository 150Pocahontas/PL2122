Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> Axiom
Rule 1     Axiom -> All
Rule 2     All -> Entry
Rule 3     All -> All Entry
Rule 4     Entry -> Production NEWLINE
Rule 5     Entry -> act
Rule 6     Entry -> Function
Rule 7     Function -> FUNCTION String
Rule 8     Production -> Identification DOTS Symbols
Rule 9     Production -> Identification DOTS Symbols EXCLAM LINE
Rule 10    Production -> BAR Symbols
Rule 11    Production -> BAR Symbols EXCLAM LINE
Rule 12    Symbols -> Symbol
Rule 13    Symbols -> Symbols Symbol
Rule 14    Symbol -> TERM
Rule 15    Symbol -> terminal
Rule 16    act -> HASH Identification DOTS String
Rule 17    act -> HASH Identification STAR NUM DOTS String
Rule 18    String -> LINE NEWLINE Strings
Rule 19    String -> LINE
Rule 20    String -> NEWLINE Strings
Rule 21    String -> LINE NEWLINE
Rule 22    Strings -> NEWLINE
Rule 23    Strings -> TAB NEWLINE
Rule 24    Strings -> Strings TAB NEWLINE
Rule 25    Identification -> STRING
Rule 26    terminal -> STRING

Terminals, with rules where they appear

BAR                  : 10 11
DOTS                 : 8 9 16 17
EXCLAM               : 9 11
FUNCTION             : 7
HASH                 : 16 17
LINE                 : 9 11 18 19 21
NEWLINE              : 4 18 20 21 22 23 24
NUM                  : 17
STAR                 : 17
STRING               : 25 26
TAB                  : 23 24
TERM                 : 14
error                : 

Nonterminals, with rules where they appear

All                  : 1 3
Axiom                : 0
Entry                : 2 3
Function             : 6
Identification       : 8 9 16 17
Production           : 4
String               : 7 16 17
Strings              : 18 20 24
Symbol               : 12 13
Symbols              : 8 9 10 11 13
act                  : 5
terminal             : 15

Parsing method: LALR

state 0

    (0) S' -> . Axiom
    (1) Axiom -> . All
    (2) All -> . Entry
    (3) All -> . All Entry
    (4) Entry -> . Production NEWLINE
    (5) Entry -> . act
    (6) Entry -> . Function
    (8) Production -> . Identification DOTS Symbols
    (9) Production -> . Identification DOTS Symbols EXCLAM LINE
    (10) Production -> . BAR Symbols
    (11) Production -> . BAR Symbols EXCLAM LINE
    (16) act -> . HASH Identification DOTS String
    (17) act -> . HASH Identification STAR NUM DOTS String
    (7) Function -> . FUNCTION String
    (25) Identification -> . STRING

    BAR             shift and go to state 8
    HASH            shift and go to state 9
    FUNCTION        shift and go to state 10
    STRING          shift and go to state 11

    Axiom                          shift and go to state 1
    All                            shift and go to state 2
    Entry                          shift and go to state 3
    Production                     shift and go to state 4
    act                            shift and go to state 5
    Function                       shift and go to state 6
    Identification                 shift and go to state 7

state 1

    (0) S' -> Axiom .



state 2

    (1) Axiom -> All .
    (3) All -> All . Entry
    (4) Entry -> . Production NEWLINE
    (5) Entry -> . act
    (6) Entry -> . Function
    (8) Production -> . Identification DOTS Symbols
    (9) Production -> . Identification DOTS Symbols EXCLAM LINE
    (10) Production -> . BAR Symbols
    (11) Production -> . BAR Symbols EXCLAM LINE
    (16) act -> . HASH Identification DOTS String
    (17) act -> . HASH Identification STAR NUM DOTS String
    (7) Function -> . FUNCTION String
    (25) Identification -> . STRING

    $end            reduce using rule 1 (Axiom -> All .)
    BAR             shift and go to state 8
    HASH            shift and go to state 9
    FUNCTION        shift and go to state 10
    STRING          shift and go to state 11

    Entry                          shift and go to state 12
    Production                     shift and go to state 4
    act                            shift and go to state 5
    Function                       shift and go to state 6
    Identification                 shift and go to state 7

state 3

    (2) All -> Entry .

    BAR             reduce using rule 2 (All -> Entry .)
    HASH            reduce using rule 2 (All -> Entry .)
    FUNCTION        reduce using rule 2 (All -> Entry .)
    STRING          reduce using rule 2 (All -> Entry .)
    $end            reduce using rule 2 (All -> Entry .)


state 4

    (4) Entry -> Production . NEWLINE

    NEWLINE         shift and go to state 13


state 5

    (5) Entry -> act .

    BAR             reduce using rule 5 (Entry -> act .)
    HASH            reduce using rule 5 (Entry -> act .)
    FUNCTION        reduce using rule 5 (Entry -> act .)
    STRING          reduce using rule 5 (Entry -> act .)
    $end            reduce using rule 5 (Entry -> act .)


state 6

    (6) Entry -> Function .

    BAR             reduce using rule 6 (Entry -> Function .)
    HASH            reduce using rule 6 (Entry -> Function .)
    FUNCTION        reduce using rule 6 (Entry -> Function .)
    STRING          reduce using rule 6 (Entry -> Function .)
    $end            reduce using rule 6 (Entry -> Function .)


state 7

    (8) Production -> Identification . DOTS Symbols
    (9) Production -> Identification . DOTS Symbols EXCLAM LINE

    DOTS            shift and go to state 14


state 8

    (10) Production -> BAR . Symbols
    (11) Production -> BAR . Symbols EXCLAM LINE
    (12) Symbols -> . Symbol
    (13) Symbols -> . Symbols Symbol
    (14) Symbol -> . TERM
    (15) Symbol -> . terminal
    (26) terminal -> . STRING

    TERM            shift and go to state 17
    STRING          shift and go to state 19

    Symbols                        shift and go to state 15
    Symbol                         shift and go to state 16
    terminal                       shift and go to state 18

state 9

    (16) act -> HASH . Identification DOTS String
    (17) act -> HASH . Identification STAR NUM DOTS String
    (25) Identification -> . STRING

    STRING          shift and go to state 11

    Identification                 shift and go to state 20

state 10

    (7) Function -> FUNCTION . String
    (18) String -> . LINE NEWLINE Strings
    (19) String -> . LINE
    (20) String -> . NEWLINE Strings
    (21) String -> . LINE NEWLINE

    LINE            shift and go to state 22
    NEWLINE         shift and go to state 23

    String                         shift and go to state 21

state 11

    (25) Identification -> STRING .

    DOTS            reduce using rule 25 (Identification -> STRING .)
    STAR            reduce using rule 25 (Identification -> STRING .)


state 12

    (3) All -> All Entry .

    BAR             reduce using rule 3 (All -> All Entry .)
    HASH            reduce using rule 3 (All -> All Entry .)
    FUNCTION        reduce using rule 3 (All -> All Entry .)
    STRING          reduce using rule 3 (All -> All Entry .)
    $end            reduce using rule 3 (All -> All Entry .)


state 13

    (4) Entry -> Production NEWLINE .

    BAR             reduce using rule 4 (Entry -> Production NEWLINE .)
    HASH            reduce using rule 4 (Entry -> Production NEWLINE .)
    FUNCTION        reduce using rule 4 (Entry -> Production NEWLINE .)
    STRING          reduce using rule 4 (Entry -> Production NEWLINE .)
    $end            reduce using rule 4 (Entry -> Production NEWLINE .)


state 14

    (8) Production -> Identification DOTS . Symbols
    (9) Production -> Identification DOTS . Symbols EXCLAM LINE
    (12) Symbols -> . Symbol
    (13) Symbols -> . Symbols Symbol
    (14) Symbol -> . TERM
    (15) Symbol -> . terminal
    (26) terminal -> . STRING

    TERM            shift and go to state 17
    STRING          shift and go to state 19

    Symbols                        shift and go to state 24
    Symbol                         shift and go to state 16
    terminal                       shift and go to state 18

state 15

    (10) Production -> BAR Symbols .
    (11) Production -> BAR Symbols . EXCLAM LINE
    (13) Symbols -> Symbols . Symbol
    (14) Symbol -> . TERM
    (15) Symbol -> . terminal
    (26) terminal -> . STRING

    NEWLINE         reduce using rule 10 (Production -> BAR Symbols .)
    EXCLAM          shift and go to state 25
    TERM            shift and go to state 17
    STRING          shift and go to state 19

    Symbol                         shift and go to state 26
    terminal                       shift and go to state 18

state 16

    (12) Symbols -> Symbol .

    EXCLAM          reduce using rule 12 (Symbols -> Symbol .)
    TERM            reduce using rule 12 (Symbols -> Symbol .)
    STRING          reduce using rule 12 (Symbols -> Symbol .)
    NEWLINE         reduce using rule 12 (Symbols -> Symbol .)


state 17

    (14) Symbol -> TERM .

    EXCLAM          reduce using rule 14 (Symbol -> TERM .)
    TERM            reduce using rule 14 (Symbol -> TERM .)
    STRING          reduce using rule 14 (Symbol -> TERM .)
    NEWLINE         reduce using rule 14 (Symbol -> TERM .)


state 18

    (15) Symbol -> terminal .

    EXCLAM          reduce using rule 15 (Symbol -> terminal .)
    TERM            reduce using rule 15 (Symbol -> terminal .)
    STRING          reduce using rule 15 (Symbol -> terminal .)
    NEWLINE         reduce using rule 15 (Symbol -> terminal .)


state 19

    (26) terminal -> STRING .

    EXCLAM          reduce using rule 26 (terminal -> STRING .)
    TERM            reduce using rule 26 (terminal -> STRING .)
    STRING          reduce using rule 26 (terminal -> STRING .)
    NEWLINE         reduce using rule 26 (terminal -> STRING .)


state 20

    (16) act -> HASH Identification . DOTS String
    (17) act -> HASH Identification . STAR NUM DOTS String

    DOTS            shift and go to state 27
    STAR            shift and go to state 28


state 21

    (7) Function -> FUNCTION String .

    BAR             reduce using rule 7 (Function -> FUNCTION String .)
    HASH            reduce using rule 7 (Function -> FUNCTION String .)
    FUNCTION        reduce using rule 7 (Function -> FUNCTION String .)
    STRING          reduce using rule 7 (Function -> FUNCTION String .)
    $end            reduce using rule 7 (Function -> FUNCTION String .)


state 22

    (18) String -> LINE . NEWLINE Strings
    (19) String -> LINE .
    (21) String -> LINE . NEWLINE

    NEWLINE         shift and go to state 29
    BAR             reduce using rule 19 (String -> LINE .)
    HASH            reduce using rule 19 (String -> LINE .)
    FUNCTION        reduce using rule 19 (String -> LINE .)
    STRING          reduce using rule 19 (String -> LINE .)
    $end            reduce using rule 19 (String -> LINE .)


state 23

    (20) String -> NEWLINE . Strings
    (22) Strings -> . NEWLINE
    (23) Strings -> . TAB NEWLINE
    (24) Strings -> . Strings TAB NEWLINE

    NEWLINE         shift and go to state 30
    TAB             shift and go to state 32

    Strings                        shift and go to state 31

state 24

    (8) Production -> Identification DOTS Symbols .
    (9) Production -> Identification DOTS Symbols . EXCLAM LINE
    (13) Symbols -> Symbols . Symbol
    (14) Symbol -> . TERM
    (15) Symbol -> . terminal
    (26) terminal -> . STRING

    NEWLINE         reduce using rule 8 (Production -> Identification DOTS Symbols .)
    EXCLAM          shift and go to state 33
    TERM            shift and go to state 17
    STRING          shift and go to state 19

    Symbol                         shift and go to state 26
    terminal                       shift and go to state 18

state 25

    (11) Production -> BAR Symbols EXCLAM . LINE

    LINE            shift and go to state 34


state 26

    (13) Symbols -> Symbols Symbol .

    EXCLAM          reduce using rule 13 (Symbols -> Symbols Symbol .)
    TERM            reduce using rule 13 (Symbols -> Symbols Symbol .)
    STRING          reduce using rule 13 (Symbols -> Symbols Symbol .)
    NEWLINE         reduce using rule 13 (Symbols -> Symbols Symbol .)


state 27

    (16) act -> HASH Identification DOTS . String
    (18) String -> . LINE NEWLINE Strings
    (19) String -> . LINE
    (20) String -> . NEWLINE Strings
    (21) String -> . LINE NEWLINE

    LINE            shift and go to state 22
    NEWLINE         shift and go to state 23

    String                         shift and go to state 35

state 28

    (17) act -> HASH Identification STAR . NUM DOTS String

    NUM             shift and go to state 36


state 29

    (18) String -> LINE NEWLINE . Strings
    (21) String -> LINE NEWLINE .
    (22) Strings -> . NEWLINE
    (23) Strings -> . TAB NEWLINE
    (24) Strings -> . Strings TAB NEWLINE

    BAR             reduce using rule 21 (String -> LINE NEWLINE .)
    HASH            reduce using rule 21 (String -> LINE NEWLINE .)
    FUNCTION        reduce using rule 21 (String -> LINE NEWLINE .)
    STRING          reduce using rule 21 (String -> LINE NEWLINE .)
    $end            reduce using rule 21 (String -> LINE NEWLINE .)
    NEWLINE         shift and go to state 30
    TAB             shift and go to state 32

    Strings                        shift and go to state 37

state 30

    (22) Strings -> NEWLINE .

    TAB             reduce using rule 22 (Strings -> NEWLINE .)
    BAR             reduce using rule 22 (Strings -> NEWLINE .)
    HASH            reduce using rule 22 (Strings -> NEWLINE .)
    FUNCTION        reduce using rule 22 (Strings -> NEWLINE .)
    STRING          reduce using rule 22 (Strings -> NEWLINE .)
    $end            reduce using rule 22 (Strings -> NEWLINE .)


state 31

    (20) String -> NEWLINE Strings .
    (24) Strings -> Strings . TAB NEWLINE

    BAR             reduce using rule 20 (String -> NEWLINE Strings .)
    HASH            reduce using rule 20 (String -> NEWLINE Strings .)
    FUNCTION        reduce using rule 20 (String -> NEWLINE Strings .)
    STRING          reduce using rule 20 (String -> NEWLINE Strings .)
    $end            reduce using rule 20 (String -> NEWLINE Strings .)
    TAB             shift and go to state 38


state 32

    (23) Strings -> TAB . NEWLINE

    NEWLINE         shift and go to state 39


state 33

    (9) Production -> Identification DOTS Symbols EXCLAM . LINE

    LINE            shift and go to state 40


state 34

    (11) Production -> BAR Symbols EXCLAM LINE .

    NEWLINE         reduce using rule 11 (Production -> BAR Symbols EXCLAM LINE .)


state 35

    (16) act -> HASH Identification DOTS String .

    BAR             reduce using rule 16 (act -> HASH Identification DOTS String .)
    HASH            reduce using rule 16 (act -> HASH Identification DOTS String .)
    FUNCTION        reduce using rule 16 (act -> HASH Identification DOTS String .)
    STRING          reduce using rule 16 (act -> HASH Identification DOTS String .)
    $end            reduce using rule 16 (act -> HASH Identification DOTS String .)


state 36

    (17) act -> HASH Identification STAR NUM . DOTS String

    DOTS            shift and go to state 41


state 37

    (18) String -> LINE NEWLINE Strings .
    (24) Strings -> Strings . TAB NEWLINE

    BAR             reduce using rule 18 (String -> LINE NEWLINE Strings .)
    HASH            reduce using rule 18 (String -> LINE NEWLINE Strings .)
    FUNCTION        reduce using rule 18 (String -> LINE NEWLINE Strings .)
    STRING          reduce using rule 18 (String -> LINE NEWLINE Strings .)
    $end            reduce using rule 18 (String -> LINE NEWLINE Strings .)
    TAB             shift and go to state 38


state 38

    (24) Strings -> Strings TAB . NEWLINE

    NEWLINE         shift and go to state 42


state 39

    (23) Strings -> TAB NEWLINE .

    TAB             reduce using rule 23 (Strings -> TAB NEWLINE .)
    BAR             reduce using rule 23 (Strings -> TAB NEWLINE .)
    HASH            reduce using rule 23 (Strings -> TAB NEWLINE .)
    FUNCTION        reduce using rule 23 (Strings -> TAB NEWLINE .)
    STRING          reduce using rule 23 (Strings -> TAB NEWLINE .)
    $end            reduce using rule 23 (Strings -> TAB NEWLINE .)


state 40

    (9) Production -> Identification DOTS Symbols EXCLAM LINE .

    NEWLINE         reduce using rule 9 (Production -> Identification DOTS Symbols EXCLAM LINE .)


state 41

    (17) act -> HASH Identification STAR NUM DOTS . String
    (18) String -> . LINE NEWLINE Strings
    (19) String -> . LINE
    (20) String -> . NEWLINE Strings
    (21) String -> . LINE NEWLINE

    LINE            shift and go to state 22
    NEWLINE         shift and go to state 23

    String                         shift and go to state 43

state 42

    (24) Strings -> Strings TAB NEWLINE .

    TAB             reduce using rule 24 (Strings -> Strings TAB NEWLINE .)
    BAR             reduce using rule 24 (Strings -> Strings TAB NEWLINE .)
    HASH            reduce using rule 24 (Strings -> Strings TAB NEWLINE .)
    FUNCTION        reduce using rule 24 (Strings -> Strings TAB NEWLINE .)
    STRING          reduce using rule 24 (Strings -> Strings TAB NEWLINE .)
    $end            reduce using rule 24 (Strings -> Strings TAB NEWLINE .)


state 43

    (17) act -> HASH Identification STAR NUM DOTS String .

    BAR             reduce using rule 17 (act -> HASH Identification STAR NUM DOTS String .)
    HASH            reduce using rule 17 (act -> HASH Identification STAR NUM DOTS String .)
    FUNCTION        reduce using rule 17 (act -> HASH Identification STAR NUM DOTS String .)
    STRING          reduce using rule 17 (act -> HASH Identification STAR NUM DOTS String .)
    $end            reduce using rule 17 (act -> HASH Identification STAR NUM DOTS String .)

